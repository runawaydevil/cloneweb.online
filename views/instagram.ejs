<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Instagram Downloader | cloneweb.online</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="icon" type="image/png" href="/logosave.png">
</head>
<body>
  <div class="loading-overlay" id="loadingOverlay" style="display:none">
    <div class="progress-container">
      <div class="progress-bar" id="progressBar" style="width:0%"></div>
    </div>
    <div id="progressMsg">Preparando download...</div>
    <button id="downloadBtn" style="display:none;margin-top:18px;">Baixar Mídia</button>
  </div>
  <div class="container">
    <header>
      <a href="/" style="text-decoration:none"><img src="/logosave.png" alt="Logo" class="logo"></a>
      <h1>Instagram Downloader</h1>
      <p class="slogan">Baixe vídeos ou fotos do Instagram facilmente!</p>
    </header>
    <main>
      <form class="clone-form" method="POST" action="/instagram/download">
        <label for="igurl">Link do post do Instagram:</label>
        <input type="url" id="igurl" name="igurl" placeholder="https://www.instagram.com/p/xxxxxx/" required>
        <button type="submit">Baixar</button>
      </form>
      <section class="info">
        <h2>Como funciona?</h2>
        <p>Insira o link de um post público do Instagram (foto ou vídeo) e clique em <b>Baixar</b>. O arquivo será processado e disponibilizado para download.</p>
      </section>
    </main>
    <footer>
      <p>Desenvolvido por RunawayDevil - <%= new Date().getFullYear() %></p>
    </footer>
  </div>
  <script>
    const form = document.querySelector('.clone-form');
    const overlay = document.getElementById('loadingOverlay');
    const progressBar = document.getElementById('progressBar');
    const progressMsg = document.getElementById('progressMsg');
    const downloadBtn = document.getElementById('downloadBtn');
    let pollInterval = null;
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      overlay.style.display = 'flex';
      progressBar.style.width = '0%';
      progressMsg.textContent = 'Preparando download...';
      downloadBtn.style.display = 'none';
      // Envia formulário via fetch
      const data = new FormData(form);
      const body = {};
      for (const [k, v] of data.entries()) body[k] = v;
      const resp = await fetch('/instagram/download', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(body)
      });
      const { id } = await resp.json();
      // Poll de progresso
      pollInterval = setInterval(async () => {
        const r = await fetch(`/instagram/progresso/${id}`);
        const prog = await r.json();
        progressBar.style.width = (prog.progresso || 0) + '%';
        if (prog.status === 'iniciando') progressMsg.textContent = 'Iniciando download...';
        else if (prog.status === 'baixando') progressMsg.textContent = `Baixando mídia... (${prog.progresso}%)`;
        else if (prog.status === 'pronto') {
          progressBar.style.width = '100%';
          progressMsg.textContent = 'Pronto! Clique para baixar.';
          downloadBtn.style.display = 'block';
          downloadBtn.onclick = () => {
            window.location = `/instagram/downloadfile/${id}`;
            overlay.style.display = 'none';
            clearInterval(pollInterval);
          };
          clearInterval(pollInterval);
        } else if (prog.status === 'erro') {
          progressMsg.textContent = 'Erro: ' + (prog.erro || 'Falha desconhecida');
          progressBar.style.background = '#f357a8';
          clearInterval(pollInterval);
        }
      }, 1200);
    });
  </script>
</body>
</html> 